<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 100.;
    var basePointY    = 250.;
    var currentX      = 0.;
    var currentY      = 0.;
    var offsetX       = 0.;
    var offsetY       = 0.;
    var radius        = 120.;
    var minorAxis     = 50;
    var majorAxis     = 100.;
    var minorDelta    = 1;
    var majorDelta    = 2;
    var index         = 0;
    var eGap          = 10;
    var angle         = 0.;
    var maxAngle      = 360.;
    var angleDelta    = 1.;
    var shortPause    = 10.;
    var strokeWidth   = 2.;
    var fillColor     = "";
    var style         = "";
    var rVal          = 0.;
    var gVal          = 0.;
    var bVal          = 0.;

    var fontSize      = 48.; 
    var textHBorder   = 20.; 
    var textVBorder   = 10.; 
    var textX         = 0.; 
    var textY         = 0.; 
    var textW         = 0.; 
    var textH         = 0.; 
 
    var textData      = null;
    var svgText       = null; 
    var theTimeout    = null;
    var svgDocument   = null;
    var target        = null;
    var gcNode        = null;

    var svgNS         = "http://www.w3.org/2000/svg";

    function init(event)
    {
       svgDocument = event.target.ownerDocument;
       gcNode = svgDocument.getElementById("gc");

       drawSpiral(event);
    }

    function drawSpiral(event) 
    {
       for(angle=0; angle<maxAngle; angle+=angleDelta)
       {
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = angle+basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          rVal = angle*255/maxAngle;
          gVal = 0.;
          bVal = 0.;

          fillColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

          index = 1 - index;

          createText(index);

          if( angle % eGap == 0 )
          {
             minorAxis -= minorDelta;
             majorAxis -= majorDelta;

             if( minorAxis < 0 ) { minorAxis = 0; }
             if( majorAxis < 0 ) { majorAxis = 0; }
          }
       }

    } // drawSpiral

    function createText(index)
    {
       textData = svgDocument.createTextNode("SVG");
       svgText  = svgDocument.createElementNS(svgNS, "text");

       svgText.setAttribute("x", currentX);
       svgText.setAttribute("y", currentY);

     //svgText.setAttribute("style", style);

       if( index == 0 )
       {
          svgText.setAttribute("fill", strokeColor);
          svgText.setAttribute("stroke", "white");
          svgText.setAttribute("stroke-width", strokeWidth);
          svgText.setAttribute("font-size", fontSize);
       }
       else
       {
          svgText.setAttribute("fill", strokeColor);
          svgText.setAttribute("stroke", "red");
          svgText.setAttribute("stroke-width", strokeWidth);
          svgText.setAttribute("font-size", fontSize);
       }

       svgText.appendChild(textData);

       svgDocument.documentElement.appendChild(svgText);

       // append bounding rectangle...
       rectX = currentX-textHBorder;
       rectY = currentY-fontSize-textVBorder;
       rectW = svgText.getComputedTextLength()+textHBorder;
       rectH = fontSize+textVBorder;

       rectNode = svgDocument.createElementNS(svgNS, "rect");

     //rectNode.setAttribute("style", style);
       rectNode.setAttribute("fill", strokeColor);
       rectNode.setAttribute("stroke", "yellow");
       rectNode.setAttribute("stroke-width", strokeWidth);

       rectNode.setAttribute("x",     rectX);
       rectNode.setAttribute("y",     rectY);
       rectNode.setAttribute("width", rectW);
       rectNode.setAttribute("height", rectH);

       gcNode.appendChild(rectNode);
    }

  ]]> </script>

<!-- ============================ -->
<g id="gc" transform="translate(10,10)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>

</svg>
