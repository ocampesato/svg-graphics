<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 350.;
    var basePointY    = 220.;
    var fixedPointX   = 0.;
    var fixedPointY   = 0.;
    var currentX      = 0.;
    var currentY      = 0.;
    var offsetX       = 0.;
    var offsetY       = 0.;
    var upperX        = 20.0;
    var upperY        = 20.0;
    var xWidth        = 400.0;
    var xHeight       = 260.0;
    var stripCount    = 10.0;
    var stripWidth    = xWidth/stripCount;
    var points        = "";
    var xPosition     = 0.0;
    var yPosition     = 0.0;
    var eWidth        = 0.;
    var eHeight       = 0.;
    var radius        = 0.;
    var minorAxis     = 12;
    var majorAxis     = 20.;
    var spiralCount   = 4.;
    var Constant      = 0.20;
    var randomAngle   = 0.;
    var angle         = 0.;
    var maxAngle      = 720.;
    var angleDelta    = 4.;
    var shortPause    = 10.;
    var strokeWidth   = 1.;
    var style         = "";
    var dashStyle     = "4 4 4 4";
    var rVal          = 0.;
    var gVal          = 0.;
    var bVal          = 0.;
 
    var triangleNode  = null;
    var ellipseNode   = null;
    var theTimeout    = null;
    var svgDocument   = null;
    var target        = null;
    var gcNode        = null;
    var gcNode2       = null;

    var svgNS         = "http://www.w3.org/2000/svg";

    function init(event)
    {
       svgDocument = event.target.ownerDocument;
       gcNode = svgDocument.getElementById("gc");
       gcNode2 = svgDocument.getElementById("gc2");

       drawSpiral(event);
    }

    function drawSpiral(event) 
    {
       randomAngle = maxAngle*Math.random();
       radius      = Constant*angle;

       offsetX     = radius*Math.cos(angle*Math.PI/180);
       offsetY     = radius*Math.sin(angle*Math.PI/180);

       fixedPointX = basePointX+offsetX;
       fixedPointY = basePointY-offsetY;

       for(angle=0; angle<maxAngle; angle+=angleDelta)
       {
          radius = Constant*angle;
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          rVal = angle*255/maxAngle;
          gVal = 0.;
          bVal = 0.;
 
          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

        //style  = "fill:"+strokeColor;
        //style += ";stroke:yellow";
        //style += ";stroke-width:"+strokeWidth;
        //style += ";stroke-dasharray:"+dashStyle;

          ellipseNode = 
                   svgDocument.createElementNS(svgNS, "ellipse");
 
        //ellipseNode.setAttribute("style",style);

          ellipseNode.setAttribute("fill", strokeColor);
          ellipseNode.setAttribute("stroke", "yellow");
          ellipseNode.setAttribute("stroke-width", strokeWidth);
          ellipseNode.setAttribute("stroke-dasharray", dashStyle);

          ellipseNode.setAttribute("cx", currentX);
          ellipseNode.setAttribute("cy", currentY);
          ellipseNode.setAttribute("rx", majorAxis);
          ellipseNode.setAttribute("ry", minorAxis);
   
          gcNode.appendChild(ellipseNode);

          ellipseNode = 
                   svgDocument.createElementNS(svgNS, "ellipse");
 
        //ellipseNode.setAttribute("style",style);
          ellipseNode.setAttribute("fill", strokeColor);
          ellipseNode.setAttribute("stroke", "yellow");
          ellipseNode.setAttribute("stroke-width", strokeWidth);
          ellipseNode.setAttribute("stroke-dasharray", dashStyle);

          eWidth  = Math.abs(fixedPointX-currentX);
          eHeight = Math.abs(fixedPointY-currentY);

          if( currentX > fixedPointX )
          {
             ellipseNode.setAttribute("cx", fixedPointX);
             ellipseNode.setAttribute("cy", fixedPointY);
             ellipseNode.setAttribute("rx", eWidth);
             ellipseNode.setAttribute("ry", eHeight);
          }
          else
          {
             ellipseNode.setAttribute("cx", currentX);
             ellipseNode.setAttribute("cy", currentY);
             ellipseNode.setAttribute("rx", eWidth);
             ellipseNode.setAttribute("ry", eHeight);
          }
   
          gcNode2.appendChild(ellipseNode);

          style  = "fill:url(#circle3DEffect1)";
          style += ";stroke:"+strokeColor;
          style += ";stroke-width:"+strokeWidth;

          ellipseNode = 
                   svgDocument.createElementNS(svgNS, "ellipse");
 
        //ellipseNode.setAttribute("style",style);
          ellipseNode.setAttribute("fill", strokeColor);
          ellipseNode.setAttribute("stroke", "yellow");
          ellipseNode.setAttribute("stroke-width", strokeWidth);
          ellipseNode.setAttribute("stroke-dasharray", dashStyle);

          eWidth  = Math.abs(fixedPointX-currentX);
          eHeight = Math.abs(fixedPointY-currentY);

          if( currentX > fixedPointX )
          {
             ellipseNode.setAttribute("cx", fixedPointX);
             ellipseNode.setAttribute("cy", fixedPointY);
             ellipseNode.setAttribute("rx", eWidth);
             ellipseNode.setAttribute("ry", eHeight);
          }
          else
          {
             ellipseNode.setAttribute("cx", currentX);
             ellipseNode.setAttribute("cy", currentY);
             ellipseNode.setAttribute("rx", eWidth);
             ellipseNode.setAttribute("ry", eHeight);
          }
   
          gcNode.appendChild(ellipseNode);

          // add triangle to fixed pattern...
          rVal = (angle%stripWidth)*255/stripWidth;
          gVal = 0.;
          bVal = 0.;
 
          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

        //style  = "fill:url(#circle3DEffect2)";
        //style += ";stroke:"+strokeColor;
        //style += ";stroke-width:"+strokeWidth;
        //style += ";stroke-dasharray:"+dashStyle;

          xPosition = upperX+xWidth-angle%xWidth;
          yPosition = upperY+(angle%xWidth)*xHeight/xWidth;

          points  = upperX+","+upperY+" ";
          points += xPosition+","+yPosition+" ";
          points += upperX+","+(upperY+xHeight)+" ";

          triangleNode = svgDocument.createElementNS(svgNS, "polygon");

        //triangleNode.setAttribute("style",style);
          triangleNode.setAttribute("fill", "url(#circle3DEffect2)");
          triangleNode.setAttribute("stroke", strokeColor);
          triangleNode.setAttribute("stroke-width", strokeWidth);
          triangleNode.setAttribute("stroke-dasharray", dashStyle);

          triangleNode.setAttribute("points",points);

          gcNode.appendChild(triangleNode);

          // add line segment to fixed pattern...
          lineNode = svgDocument.createElementNS(svgNS, "line");
 
          xPosition = upperX+xWidth-angle%xWidth;
          yPosition = upperY+(angle%xWidth)*xHeight/xWidth;

        //lineNode.setAttribute("style",style);
          lineNode.setAttribute("stroke", strokeColor);
          lineNode.setAttribute("stroke-width", strokeWidth);
          lineNode.setAttribute("stroke-dasharray", dashStyle);

          lineNode.setAttribute("x1", currentX);
          lineNode.setAttribute("y1", currentY);
          lineNode.setAttribute("x2", xPosition);
          lineNode.setAttribute("y2", yPosition);
   
          gcNode.appendChild(lineNode);
       }

    } // drawSpiral

  ]]> </script>

<!-- ============================ -->
  <defs>
     <radialGradient id="circle3DEffect1" 
                     gradientUnits="objectBoundingBox"
                     fx="30%" fy="30%">
      
       <stop offset="0%"   style="stop-color:#FFFFFF"/>
       <stop offset="40%"  style="stop-color:#0000AA"/>
       <stop offset="100%" style="stop-color:#000066"/>
     </radialGradient>
      
     <radialGradient id="circle3DEffect2" 
                     gradientUnits="objectBoundingBox"
                     fx="30%" fy="30%">
      
       <stop offset="0%"   style="stop-color:#FFFFFF"/>
       <stop offset="40%"  style="stop-color:#AA0000"/>
       <stop offset="100%" style="stop-color:#660000"/>
     </radialGradient>
      
     <circle id="3DCircle" cx="0" cy="0" r="40" 
             style="fill:url(#circle3DEffect1)" />

     <circle id="3DCircle1" cx="0" cy="0" r="40" 
             style="fill:url(#circle3DEffect1)" />

     <circle id="3DCircle2" cx="0" cy="0" r="40" 
             style="fill:url(#circle3DEffect2)" />

     <circle id="darkCircle" cx="0" cy="0" r="40" 
             style="fill:black"/>
  </defs>

<g id="gc" transform="translate(10,10)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>

<g id="gc2" transform="translate(10,10) scale(.5)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>

</svg>
