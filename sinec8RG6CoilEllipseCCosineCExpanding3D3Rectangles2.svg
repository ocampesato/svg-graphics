<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 450.;
    var basePointY    = 350.;
    var currentX      = 0.;
    var currentY      = 0.;
    var offsetX       = 0.;
    var offsetY       = 0.;
    var radius        = 0.;
    var minorAxis     = 15.;
    var majorAxis     = 30.;
    var spiralCount   = 4.;
    var Constant      = 300.;
    var angle         = 0.;
    var maxAngle      = 720.;
    var angleDelta    = 2.;
    var rGap          = 20.;
    var rWidth        = 2*majorAxis;
    var rHeight       = 2*minorAxis;
    var widthDelta    = 4.;
    var heightDelta   = 2.;
    var shortPause    = 10.;
    var strokeWidth   = 1.;
    var xVertex       = 0.;
    var yVertex       = 0.;
    var slantX        = 20.;
    var slantY        = 10.;
    var rectCount     = 0.;
    var points        = "";
    var strokeColor   = "";
    var style         = "";
    var outerRadius   = 3*majorAxis/2;
    var innerRadius   = 1*outerRadius/3;
    var stripCount    = 20;
    var stripWidth    = Math.floor(maxAngle/stripCount);
    var frequency     = 5.; 
    var rVal          = 0.;
    var gVal          = 0.;
    var bVal          = 0.;
    var sineCubed     = 0.;
    var cosineCubed   = 0.;

    var rectNode      = null;
    var circleNode    = null;
    var polygonNode   = null;
    var ellipseNode   = null;
    var theTimeout    = null;
    var svgDocument   = null;
    var target        = null;
    var gcNode        = null;

    var svgNS         = "http://www.w3.org/2000/svg";

    function init(event)
    {
       svgDocument = event.target.ownerDocument;
       gcNode = svgDocument.getElementById("gc");

       drawSpiral(event);
    }

    function drawSpiral(event) 
    {
       for(angle=0; angle<maxAngle; angle+=angleDelta)
       {
          sineCubed = Math.sin(angle*Math.PI/180)*
                      Math.sin(angle*Math.PI/180)*
                      Math.sin(angle*Math.PI/180);

          cosineCubed = Math.cos(angle*Math.PI/180)*
                        Math.cos(angle*Math.PI/180)*
                        Math.cos(angle*Math.PI/180);

          radius = Constant*(sineCubed-cosineCubed);
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          rVal = angle*255/maxAngle;
          gVal = 0.;
          bVal = 0.;

          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

        //style  = "fill:"+strokeColor;
        //style += ";stroke:yellow";
        //style += ";stroke-width:"+strokeWidth;

          ellipseNode = 
                   svgDocument.createElementNS(svgNS, "ellipse");
   
        //ellipseNode.setAttribute("style",style);
          ellipseNode.setAttribute("fill", strokeColor);
          ellipseNode.setAttribute("stroke", "yellow");
          ellipseNode.setAttribute("stroke-width", strokeWidth);

          ellipseNode.setAttribute("cx", currentX);
          ellipseNode.setAttribute("cy", currentY);
          ellipseNode.setAttribute("rx", majorAxis);
          ellipseNode.setAttribute("ry", minorAxis);
   
          gcNode.appendChild(ellipseNode);

          // attach a lateral circle...
          offsetX = outerRadius*Math.cos(
                            frequency*angle*Math.PI/180);

          offsetY = outerRadius*Math.sin(
                            frequency*angle*Math.PI/180);

          rVal = (angle%stripWidth)*255/stripWidth;
          gVal = 0;
          bVal = 0;
    
        //style  = "stroke:rgb("+rVal+","+gVal+","+bVal+")";
        //style += ";fill:rgb("+rVal+","+gVal+","+bVal+")";
        //style += ";stroke-dasharray:"+dashStyle;
        //style += ";fill:url(#radialGradient1)";
   
          circleNode = document.createElementNS(svgNS, "circle");
           
        //circleNode.setAttribute("style",style);
          circleNode.setAttribute("fill", "url(#radialGradient1)");
          circleNode.setAttribute("stroke", strokeColor);

          circleNode.setAttribute("cx", currentX+offsetX);
          circleNode.setAttribute("cy", currentY-offsetY);
          circleNode.setAttribute("r",  innerRadius);

          gcNode.appendChild(circleNode);

          if( angle % rGap == 0 )
          {
             addRectangleNode();
             rWidth  += widthDelta;
             rHeight += heightDelta;
          }
       }

    } // drawSpiral

    function addRectangleNode(event) 
    {
       rectNode = svgDocument.createElementNS(svgNS, "rect");
   
     //style  = "fill:yellow;stroke:red;";
     //style += ";fill:url(#radialGradient1)";
     //style += "stroke-width:"+strokeWidth;

     //rectNode.setAttribute("style",style);
       rectNode.setAttribute("fill", "url(#radialGradient1)");
       rectNode.setAttribute("stroke-width", strokeWidth);

       rectNode.setAttribute("x",      
                             currentX-rWidth/2);

       rectNode.setAttribute("y",      
                             currentY-rHeight/2);

       rectNode.setAttribute("width",  rWidth);
       rectNode.setAttribute("height", rHeight);

       gcNode.appendChild(rectNode);

       // top horizontal strip... 
       polygonNode = svgDocument.createElementNS(svgNS, "polygon");
 
       xVertex = currentX-rWidth/2;
       yVertex = currentY-rHeight/2;
       points  = xVertex+" "+yVertex+" ";

       xVertex = currentX-rWidth/2+rWidth;
       yVertex = currentY-rHeight/2;
       points  += xVertex+" "+yVertex+" ";

       xVertex  = currentX-rWidth/2+rWidth+slantX;
       yVertex  = currentY-rHeight/2-slantY;
       points  += xVertex+" "+yVertex+" ";

       xVertex  = currentX-rWidth/2+slantX;
       yVertex  = currentY-rHeight/2-slantY;
       points  += xVertex+" "+yVertex;

       if( rectCount % 4 == 0 ) 
       {
          polygonNode.setAttribute("fill", "yellow");
          polygonNode.setAttribute("stroke", "red");
          polygonNode.setAttribute("stroke-width", strokeWidth);
       }
       else if( rectCount % 4 == 1 ) 
       {
          polygonNode.setAttribute("fill", "blue");
          polygonNode.setAttribute("stroke", "red");
          polygonNode.setAttribute("stroke-width", strokeWidth);
       }

     //polygonNode.setAttribute("style",style);

       polygonNode.setAttribute("points",points);
       gcNode.appendChild(polygonNode);

       // right vertical strip... 
       polygonNode = svgDocument.createElementNS(svgNS, "polygon");

       xVertex = currentX-rWidth/2+rWidth;
       yVertex = currentY-rHeight/2;
       points  = xVertex+" "+yVertex+" ";

       xVertex  = currentX-rWidth/2+rWidth+slantX;
       yVertex  = currentY-rHeight/2-slantY;
       points  += xVertex+" "+yVertex+" ";

       xVertex  = currentX-rWidth/2+rWidth+slantX;
       yVertex  = currentY-rHeight/2-slantY+rHeight;
       points  += xVertex+" "+yVertex+" ";

       xVertex  = currentX-rWidth/2+rWidth;
       yVertex  = currentY-rHeight/2+rHeight;
       points  += xVertex+" "+yVertex+" ";

       if( rectCount % 4 == 2 ) 
       {
          polygonNode.setAttribute("fill", "blue");
          polygonNode.setAttribute("stroke", "red");
          polygonNode.setAttribute("stroke-width", strokeWidth);
       }
       else if( rectCount % 4 == 3 ) 
       {
          polygonNode.setAttribute("fill", "yellow");
          polygonNode.setAttribute("stroke", "red");
          polygonNode.setAttribute("stroke-width", strokeWidth);
       }

       ++rectCount;

     //polygonNode.setAttribute("style",style);
       polygonNode.setAttribute("points",points);
       gcNode.appendChild(polygonNode);
    }

  ]]> </script>

<!-- ============================ -->
<defs>
   <radialGradient id="radialGradient1" 
                   gradientUnits="userSpaceOnUse"
                   cx="400" cy="200" r="300" 
                   fx="400" fy="200">
     <stop offset="0"    stop-color="white"/>
     <stop offset=".149" stop-color="red"/>
     <stop offset=".15"  stop-color="blue"/>
     <stop offset=".649" stop-color="yellow"/>
     <stop offset=".65"  stop-color="green"/>
     <stop offset=".849" stop-color="red"/>
     <stop offset=".85"  stop-color="blue"/>
     <stop offset="1"    stop-color="black"/>
   </radialGradient>

   <radialGradient id="radialGradient2" 
                   gradientUnits="userSpaceOnUse"
                   cx="400" cy="200" r="300" 
                   fx="400" fy="200">
     <stop offset="0"    stop-color="yellow"/>
     <stop offset=".149" stop-color="red"/>
     <stop offset=".15"  stop-color="white"/>
     <stop offset="1"    stop-color="black"/>
   </radialGradient>
 
  <radialGradient id="redCircle" 
                  gradientUnits="objectBoundingBox"
                  fx="30%" fy="30%">
   
    <stop offset="0%"   style="stop-color:#FFFFFF"/>
    <stop offset="40%"  style="stop-color:#AA0000"/>
    <stop offset="100%" style="stop-color:#660000"/>
  </radialGradient>

   <radialGradient id="gradientDefinition2">
      <stop offset="0%"   stop-color="#C0C040"/>
      <stop offset="30%"  stop-color="#303000"/>
      <stop offset="60%"  stop-color="#FF0F0F"/>
      <stop offset="90%"  stop-color="#101000"/>
   </radialGradient> 
</defs>

<g id="gc" transform="translate(10,10)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>

</svg>
