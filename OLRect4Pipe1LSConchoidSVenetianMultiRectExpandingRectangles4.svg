<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 150.;
    var basePointY    = 250.;
    var currentX      = 0.;
    var currentY      = 0.;
    var offsetX       = 0.;
    var offsetY       = 0.;
    var radius        = 0.;
    var minorAxis     = 25.;
    var majorAxis     = 50.;
    var Constant1     = 120.;
    var Constant2     = 100.;
    var angle         = 0.;
    var maxAngle      = 360.;
    var angleDelta    = 1.;
    var rGap          = 16.;
    var rWidth        = 2*majorAxis;
    var rHeight       = 2*minorAxis;
    var widthDelta    = 4.;
    var heightDelta   = 2.;
    var shortPause    = 10.;
    var strokeWidth   = 2.;
    var style         = "";
    var fillColor     = "";
    var fromX         = 0.;
    var fromY         = 0.;
    var destX         = 0.;
    var destY         = 0.;
    var lineHVLength  = 2*minorAxis;
    var lineHHLength  = 2*majorAxis;
    var dashArray     = "4 4 4 4";
    var rectHeight    = 12;
    var rectWidth     = 20.;
    var cellWidth     = 4*rectWidth;
    var cellHeight    = 4*rectHeight;
    var shiftX        = 6;
    var shiftY        = 6;
    var rVal          = 0.;
    var gVal          = 0.;
    var bVal          = 0.;
 
    var lineNode      = null;
    var rectNode      = null;
    var theTimeout    = null;
    var svgDocument   = null;
    var target        = null;
    var gcNode        = null;

    var svgNS         = "http://www.w3.org/2000/svg";

    function init(event)
    {
       svgDocument = event.target.ownerDocument;
       gcNode = svgDocument.getElementById("gc");

       drawSpiral(event);
    }

    function addRectangles()
    {
       strokeColor = "rgb("+rVal+","+gVal+","+bVal+")";

     //style  = "fill:url(#gradientDefinition2)";
     //style += ";stroke:yellow";
     //style += ";stroke-width:"+strokeWidth;

       // outer rectangle...
       rectNode = svgDocument.createElementNS(svgNS, "rect");

     //rectNode.setAttribute("style",  style);
       rectNode.setAttribute("fill", "url(#gradientDefinition2)");
     //rectNode.setAttribute("stroke", "yellow");

       if(angle/angleDelta % 8 == 0) 
       {
          rectNode.setAttribute("stroke", "yellow");
       }
       else
       {
          rectNode.setAttribute("stroke", strokeColor);
       }

       rectNode.setAttribute("stroke-width", strokeWidth);

       rectNode.setAttribute("x",      currentX);
       rectNode.setAttribute("y",      currentY);
       rectNode.setAttribute("width",  cellWidth);
       rectNode.setAttribute("height", cellHeight);

       gcNode.appendChild(rectNode);

       // inner shadow rectangle...
       rectNode = svgDocument.createElementNS(svgNS, "rect");

     //style = "fill:black";
     //rectNode.setAttribute("style",  style);
       rectNode.setAttribute("fill", "red");

       rectNode.setAttribute("x", 
                            currentX+cellWidth/4+shiftX);
       rectNode.setAttribute("y", 
                            currentY+cellHeight/4+shiftY);

       rectNode.setAttribute("width",  cellWidth/2);
       rectNode.setAttribute("height", cellHeight/2);

       gcNode.appendChild(rectNode);

       // inner rectangle...
       rectNode = svgDocument.createElementNS(svgNS, "rect");

       strokeColor = "rgb("+rVal+","+gVal+","+bVal+")";

     //style  = "fill:"+strokeColor;
     //style += ";stroke:yellow";
     //style += ";stroke-width:"+strokeWidth;

     //rectNode.setAttribute("style",  style);
       rectNode.setAttribute("fill",   strokeColor);
       rectNode.setAttribute("stroke", strokeColor);
       rectNode.setAttribute("stroke-width", strokeWidth);

       rectNode.setAttribute("x",      currentX+cellWidth/4);
       rectNode.setAttribute("y",      currentY+cellHeight/4);
       rectNode.setAttribute("width",  cellWidth/2);
       rectNode.setAttribute("height", cellHeight/2);

       gcNode.appendChild(rectNode);
    }

    function drawSpiral(event) 
    {
       for(angle=0; angle<maxAngle; angle+=angleDelta)
       {
          radius = Constant1+Constant2/
                          Math.cos(angle*Math.PI/180);
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          addRectangles();

          rVal = angle*255/maxAngle;
          gVal = 0.;
          bVal = 0.;

          fillColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

        //style  = "fill:"+strokeColor;
        //style += ";stroke:yellow";
        //style += ";stroke-width:"+strokeWidth;

          // add perpendicular line segments...
        //style  = ";stroke:black";
        //style += ";stroke-width:"+strokeWidth;
        //style += ";stroke-dasharray:"+dashArray;

          fromX = currentX-lineHHLength;
          fromY = currentY;
          destX = currentX+lineHHLength;
          destY = currentY;

          lineNode = svgDocument.createElementNS(svgNS, "line");

        //lineNode.setAttribute("style",style);
          lineNode.setAttribute("stroke", strokeColor);
          lineNode.setAttribute("stroke-width", strokeWidth);
          lineNode.setAttribute("stroke-dasharray", dashArray);

          lineNode.setAttribute("x1",   fromX);
          lineNode.setAttribute("y1",   fromY);
          lineNode.setAttribute("x2",   destX);
          lineNode.setAttribute("y2",   destY);
   
          gcNode.appendChild(lineNode);

          fromX = currentX;
          fromY = currentY-lineHVLength;
          destX = currentX;
          destY = currentY+lineHHLength;

          lineNode = svgDocument.createElementNS(svgNS, "line");
 
        //lineNode.setAttribute("style",style);
          lineNode.setAttribute("stroke", "black");
          lineNode.setAttribute("stroke-width", strokeWidth);
          lineNode.setAttribute("stroke-dasharray", dashArray);

          lineNode.setAttribute("x1",   fromX);
          lineNode.setAttribute("y1",   fromY);
          lineNode.setAttribute("x2",   destX);
          lineNode.setAttribute("y2",   destY);
   
          gcNode.appendChild(lineNode);

          if( angle % rGap == 0 )
          {
             addRectangleNode();
             rWidth  += widthDelta;
             rHeight += heightDelta;
          }
       }

    } // drawSpiral

    function addRectangleNode(event) 
    {
       rectNode = svgDocument.createElementNS(svgNS, "rect");
   
     //style  = "fill:url(#multiPattern1);";
     //style += "stroke-width:"+strokeWidth;

     //rectNode.setAttribute("style",style);
       rectNode.setAttribute("fill", "url(#multiPattern1)");
       rectNode.setAttribute("stroke-width", strokeWidth);

       rectNode.setAttribute("x",      
                             currentX-rWidth/2);

       rectNode.setAttribute("y",      
                             currentY-rHeight/2);

       rectNode.setAttribute("width",  rWidth);
       rectNode.setAttribute("height", rHeight);

       gcNode.appendChild(rectNode);
    }

  ]]> </script>

<!-- ============================ -->
<defs>
   <radialGradient id="gradientDefinition2">
      <stop offset="0%"   stop-color="#C0C040"/>
      <stop offset="30%"  stop-color="#303000"/>
      <stop offset="60%"  stop-color="#FF0F0F"/>
      <stop offset="90%"  stop-color="#101000"/>
   </radialGradient> 

  <linearGradient id="redGradientDefinition"
     x1="0" y1="0" x2="40" y2="40" 
     gradientUnits="userSpaceOnUse" spreadMethod="repeat">
     <stop offset="0%" style="stop-color:#FF0000"/>
     <stop offset="100%" style="stop-color:#000000"/>
  </linearGradient> 

  <linearGradient id="blueGradientDefinition"
     x1="0" y1="0" x2="40" y2="40" 
     gradientUnits="userSpaceOnUse" spreadMethod="repeat">
     <stop offset="20%" style="stop-color:#0000FF"/>
     <stop offset="80%" style="stop-color:#000000"/>
  </linearGradient> 
  
  <pattern id="multiPattern1" 
           width="160" height="160"
           patternUnits="userSpaceOnUse">
     <rect 
        x="0" y="0" width="80" height="80"
        style="fill:url(#redGradientDefinition);stroke:none"/>
   
     <rect 
        x="80" y="0" width="80" height="80"
        style="fill:url(#blueGradientDefinition);stroke:none"/>
   
     <rect 
        x="0" y="80" width="80" height="80"
        style="fill:url(#blueGradientDefinition);stroke:none"/>
   
     <rect 
        x="80" y="80" width="80" height="80"
        style="fill:url(#redGradientDefinition);stroke:none"/>
   </pattern>
</defs>

<g id="gc" transform="translate(10,10)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>

</svg>
