<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" 
  "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">

<svg width="100%" height="100%" onload="init(evt)"
     xmlns="http://www.w3.org/2000/svg">

  <script type="text/ecmascript"> 
    <![CDATA[
    var basePointX    = 250.;
    var basePointY    = 300.;
    var currentX      = 0.;
    var currentY      = 0.;
    var offsetX       = 0.;
    var offsetY       = 0.;
    var radius        = 0.;
    var minorAxis     = 20.;
    var majorAxis     = 40.;
    var Constant      = 20000.;
    var angle         = 0.;
    var maxAngle      = 360.;
    var angleDelta    = 3.;
    var shortPause    = 10.;
    var rGap          = 8.;
    var rWidth        = 2*majorAxis;
    var rHeight       = 2*minorAxis;
    var widthDelta    = 4.;
    var heightDelta   = 2.;
    var strokeWidth   = 1.;
    var style         = "";
    var arcStyle      = "";
    var points        = "";
    var arcX          = 30.;
    var arcY          = 30.;
    var rVal          = 0.;
    var gVal          = 0.;
    var bVal          = 0.;
 
    var rectNode      = null;
    var circleNode    = null;
    var pathNode      = null;
    var rectNode      = null;
    var ellipseNode   = null;
    var theTimeout    = null;
    var svgDocument   = null;
    var target        = null;
    var gcNode        = null;

    var svgNS         = "http://www.w3.org/2000/svg";

    function init(event)
    {
       svgDocument = event.target.ownerDocument;
       gcNode = svgDocument.getElementById("gc");

       drawSpiral(event);
    }

    function drawSpiral(event) 
    {
       for(angle=0; angle<maxAngle; angle+=angleDelta)
       {
          radius = Constant*
                    Math.sin(angle*Math.PI/180)/angle;
  
          offsetX = radius*Math.cos(angle*Math.PI/180);
          offsetY = radius*Math.sin(angle*Math.PI/180);

          currentX = basePointX+offsetX;
          currentY = basePointY-offsetY;
  
          ellipseNode = 
                   svgDocument.createElementNS(svgNS, "ellipse");
   
          rVal = angle*255/maxAngle;
          gVal = 0.;
          bVal = 0.;

          fillColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

          strokeColor = 
                  "rgb("+rVal+","+gVal+","+bVal+")";

        //style  = "fill:"+strokeColor;
        //style += ";stroke:yellow";
        //style += ";stroke-width:"+strokeWidth;

        //ellipseNode.setAttribute("style",style);
          ellipseNode.setAttribute("fill", fillColor);
          ellipseNode.setAttribute("stroke", strokeColor);
          ellipseNode.setAttribute("stroke-width", strokeWidth);

          ellipseNode.setAttribute("cx", currentX);
          ellipseNode.setAttribute("cy", currentY);
          ellipseNode.setAttribute("rx", majorAxis);
          ellipseNode.setAttribute("ry", minorAxis);
   
          gcNode.appendChild(ellipseNode);

          addBarbedCircleangle();

          if( angle % rGap == 0 )
          {
             addRectangleNode();
             rWidth  += widthDelta;
             rHeight += heightDelta;
          }
       }

    } // drawSpiral

    function addBarbedCircleangle()
    {
       circleNode = svgDocument.createElementNS(svgNS, "circle");
 
     //circleStyle = "fill:black;stroke:blue;stroke-width:2";
     //circleNode.setAttribute("style",circleStyle);

       circleNode.setAttribute("fill", "black");
       circleNode.setAttribute("stroke", "blue");
       circleNode.setAttribute("stroke-width", 1);

       circleNode.setAttribute("cx",currentX);
       circleNode.setAttribute("cy",currentY);
       circleNode.setAttribute("r", 3*arcX/4);
   
       gcNode.appendChild(circleNode);

       // <path d="M0,0 v-30 a60,30 0 0,1 -60,30 z" 
       // upper quadrants 
       points  = "M"+(currentX)+","+currentY+" ";
       points += "v"+(-arcY)+" ";
       points += "a"+(2*arcX)+","+(arcY)+" 0 0,1 ";
       points += (-2*arcX)+","+(arcY)+" z";
 
       pathNode = svgDocument.createElementNS(svgNS, "path");
 
     //arcStyle = "fill:red;stroke:blue;stroke-width:2";
     //pathNode.setAttribute("style",arcStyle);
       pathNode.setAttribute("fill", "red");
       pathNode.setAttribute("stroke", "blue");
       pathNode.setAttribute("stroke-width", 1);

       pathNode.setAttribute("d", points);
   
       gcNode.appendChild(pathNode);

       //<path d="M0,0 v-30 a60,30 0 0,0 60,30 z"
       points  = "M"+(currentX)+","+currentY+" ";
       points += "v"+(-arcY)+" ";
       points += "a"+(2*arcX)+","+(arcY)+" 0 0,0 ";
       points += (2*arcX)+","+(arcY)+" z";
 
       pathNode = svgDocument.createElementNS(svgNS, "path");
     //pathNode.setAttribute("style",style);
       pathNode.setAttribute("fill", "red");
       pathNode.setAttribute("stroke", "blue");
       pathNode.setAttribute("stroke-width", 1);

       pathNode.setAttribute("d", points);
   
       gcNode.appendChild(pathNode);

       // <path d="M0,0 v30 a60,30 0 0,0 -60,-30 z"
       points  = "M"+(currentX)+","+currentY+" ";
       points += "v"+(arcY)+" ";
       points += "a"+(2*arcX)+","+(arcY)+" 0 0,0 ";
       points += (-2*arcX)+","+(-arcY)+" z";
 
       pathNode = svgDocument.createElementNS(svgNS, "path");
 
     //pathNode.setAttribute("style",style);
       pathNode.setAttribute("fill", "red");
       pathNode.setAttribute("stroke", "blue");
       pathNode.setAttribute("stroke-width", 1);

       pathNode.setAttribute("d", points);
   
       gcNode.appendChild(pathNode);

       // <path d="M0,0 v30 a60,30 0 0,1 60,-30 z"
       points  = "M"+(currentX)+","+(currentY)+" ";
       points += "v"+(arcY)+" ";
       points += "a"+(2*arcX)+","+(arcY)+" 0 0,1 ";
       points += (2*arcX)+","+(-arcY)+" z";
 
       pathNode = svgDocument.createElementNS(svgNS, "path");
 
     //pathNode.setAttribute("style",style);
       pathNode.setAttribute("fill", "red");
       pathNode.setAttribute("stroke", "blue");
       pathNode.setAttribute("stroke-width", 1);
       pathNode.setAttribute("d", points);
   
       gcNode.appendChild(pathNode);

       // <circle cx="0" cy="0" r="10"
       // fill="black" stroke="blue" stroke-width="2"/>
       circleNode = svgDocument.createElementNS(svgNS, "circle");
 
     //circleStyle = "fill:black;stroke:blue;stroke-width:2";
     //circleNode.setAttribute("style",circleStyle);

       circleNode.setAttribute("fill", "black");
       circleNode.setAttribute("stroke", "blue");
       circleNode.setAttribute("stroke-width", 1);

       circleNode.setAttribute("cx",currentX);
       circleNode.setAttribute("cy",currentY);
       circleNode.setAttribute("r", arcX/3);
   
       gcNode.appendChild(circleNode);
    }

    function addRectangleNode(event) 
    {
       rectNode = svgDocument.createElementNS(svgNS, "rect");
   
     //style  = "fill:yellow;stroke:red;";
     //style  = "fill:url(#gradientDefinition2);";
     //style += "stroke-width:"+strokeWidth;

     //rectNode.setAttribute("style",style);
       rectNode.setAttribute("fill", "url(#gradientDefinition2)");
       rectNode.setAttribute("stroke-width", strokeWidth);

       rectNode.setAttribute("x",      
                             currentX-rWidth/2);

       rectNode.setAttribute("y",      
                             currentY-rHeight/2);

       rectNode.setAttribute("width",  rWidth);
       rectNode.setAttribute("height", rHeight);

       gcNode.appendChild(rectNode);
    }

  ]]> </script>

<!-- ============================ -->
<defs>
   <radialGradient id="gradientDefinition2">
      <stop offset="0%"   stop-color="#C0C040"/>
      <stop offset="30%"  stop-color="#303000"/>
      <stop offset="60%"  stop-color="#FF0F0F"/>
      <stop offset="90%"  stop-color="#101000"/>
   </radialGradient> 
</defs>

<g id="gc" transform="translate(10,10)"> 
  <rect x="0" y="0" 
        width="800" height="500" 
        fill="none" stroke="none"/>
</g>

</svg>
